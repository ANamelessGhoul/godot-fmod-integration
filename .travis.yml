language: cpp
dist: xenial
osx_image: xcode10.1

matrix:
  include:
    - name: Linux
      os: linux
      compiler: gcc
      addons:
        apt:
          packages:
            [scons, pkg-config, build-essential, p7zip-full]
      env: PLATFORM=x11 ADDITIONAL_FLAGS="tools=no target=release bits=64"

    - name: macOS
      os: osx
      compiler: clang
      env: ADDITIONAL_FLAGS="" PLATFORM="osx"

    - name: Windows MSVC
      os: windows
      env: ADDITIONAL_FLAGS="" PLATFORM="windows"

    - name: Android ARM
      os: linux
      env: ADDITIONAL_FLAGS="android_arch=arm" PLATFORM="android" ANDROID_NDK_ROOT="/home/travis/build/GodotNativeTools/godot-cpp/android-sdk/ndk-bundle"
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-6.0
          packages:
            [scons, pkg-config, build-essential, p7zip-full, clang-format-6.0]

    - name: Android ARM64
      os: linux
      env: ADDITIONAL_FLAGS="android_arch=arm64v8" PLATFORM="android" ANDROID_NDK_ROOT="/home/travis/build/GodotNativeTools/godot-cpp/android-sdk/ndk-bundle"
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-6.0
          packages:
            [scons, pkg-config, build-essential, p7zip-full, clang-format-6.0]

    - name: iOS
      os: osx
      osx_image: xcode10.2
      compiler: clang
      env: ADDITIONAL_FLAGS="" PLATFORM="ios"

install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    brew update;
    brew install scons p7zip;
    fi

  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
    curl -LO https://downloads.sourceforge.net/project/scons/scons-local/3.0.5/scons-local-3.0.5.zip;
    unzip scons-local-3.0.5.zip;
    fi

  - rm -rf api
  - sh .travis/download-fmod.sh $FMODUSER $FMODPASS $PLATFORM
  - if [[ "$PLATFORM" == "x11" ]]; then tar -xvf fmodstudioapi11012linux.tar.gz; fi
  - if [[ "$PLATFORM" == "osx" ]]; then hdiutil attach fmodstudioapi11012osx.dmg; fi
  - if [[ "$PLATFORM" == "windows" ]]; then 7z x fmodstudioapi11012win-installer.exe; fi
  - if [[ "$PLATFORM" == "ios" ]]; then hdiutil attach fmodstudioapi11012ios.dmg; fi
  - if [[ "$PLATFORM" == "android" ]]; then tar -xvf fmodstudioapi11012android.tar.gz; fi
  - if [[ "$PLATFORM" == "x11" ]]; then mv fmodstudioapi11012linux/api ./; fi
  - if [[ "$PLATFORM" == "osx" ]]; then cp -r "/Volumes/FMOD Programmers API Mac/FMOD Programmers API/api" ./; fi
  - if [[ "$PLATFORM" == "windows" ]]; then mv api/ ./; fi
  - if [[ "$PLATFORM" == "ios" ]]; then cp -r "/Volumes/FMOD Programmers API iOS/FMOD Programmers API/api" ./; fi
  - if [[ "$PLATFORM" == "android" ]]; then mv fmodstudioapi11012android/api ./; fi

  - cd .. && git clone https://github.com/godotengine/godot.git && git checkout 3.1.1-stable
  - mv godot-fmod-integration godot/modules/fmod

  - if [[ "$PLATFORM" == "android" ]]; then
    sh .travis/download_android_sdk.sh;
    fi

  - cd godot

script:
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
    export SCONS="./scons.bat";
    else
    export SCONS="scons";
    fi

  - $SCONS platform=$PLATFORM $ADDITIONAL_FLAGS;

  - if [[ "$STATIC_CHECKS" == "yes" ]]; then
    sh ./misc/travis/clang-format.sh;
    fi